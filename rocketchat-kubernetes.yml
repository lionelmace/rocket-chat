---
# Application Rocket.Chat to deploy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: rocketchat
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: rocketchat
    spec:
      containers:
      - env:
        - name: MONGO_URL
          value: mongodb://db:27017/rocketchat
        - name: ROOT_URL
          value: https://192.168.99.100/
        - name: Accounts_UseDNSDomainCheck
          value: "True"
        - name: ADMIN_USERNAME
          value: admin
        - name: ADMIN_PASS
          value: supersecret
        - name: ADMIN_EMAIL
          value: admin@example.com
        image: rocketchat/rocket.chat:0.54.2
        name: rocketchat
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}
---
# Service Rocket.Chat to deploy
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: rocketchat
  name: rocketchat
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    service: rocketchat
status:
  loadBalancer: {}
---
# Application Hubot to deploy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: hubot
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: hubot
    spec:
      containers:
      - env:
        - name: ROCKETCHAT_URL
          value: 192.168.99.100:3000
        - name: ROCKETCHAT_ROOM
          value: GENERAL
        - name: ROCKETCHAT_USER
          value: bot
        - name: ROCKETCHAT_PASSWORD
          value: bot
        - name: LISTEN_ON_ALL_PUBLIC
          value: "true"
        - name: BOT_NAME
          value: hubot
        - name: EXTERNAL_SCRIPTS
          value: hubot-help,hubot-seen,hubot-links,hubot-greetings,hubot-diagnostics,hubot-google,hubot-reddit,hubot-bofh,hubot-bookmark,hubot-shipit,hubot-maps
        image: rocketchat/hubot-rocketchat:v1.0.6
        name: hubot
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
---
# Service Hubot to deploy
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: hubot
  name: hubot
spec:
  ports:
  - name: "3001"
    port: 3001
    targetPort: 8080
  selector:
    service: hubot
status:
  loadBalancer: {}
---
# Database to deploy
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: db
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: db
    spec:
      containers:
      - args:
        - mongod
        - --smallfiles
        image: mongo:3.5.5
        name: db
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: db-claim0
        - mountPath: /dump
          name: db-claim1
      restartPolicy: Always
      volumes:
      - name: db-claim0
        persistentVolumeClaim:
          claimName: db-claim0
      - name: db-claim1
        persistentVolumeClaim:
          claimName: db-claim1
status: {}
---
# Service Database to deploy
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    service: db
  name: db
spec:
  clusterIP: None
  ports:
  - name: headless
    port: 55555
    targetPort: 0
  selector:
    service: db
status:
  loadBalancer: {}
